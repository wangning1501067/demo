server:
  servlet:
    servlet-path: /
#设置端口号
  port: ${PORT:8088}

# logger
logging:
  config: classpath:logback.xml
  #打印sql
  level:
    com:
      test:
        demo:
          user:
            mapper: debug # 改成你的mapper文件所在包路径

### postgresql config ###
redis:
  #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
  testOnBorrow: true
  #在空闲时检查有效性, 默认false
  testWhileIdle: true
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://112.126.101.39:3306/test2?useUnicode=true&characterEncoding=utf8
    username: root
    password: ssjz@2019
    wait_timeout: 86400

  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 192.168.23.121
    # Redis服务器连接密码（默认为空）
    password: 123456
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最小空闲连接
        min-idle: 1
    # Redis服务器连接端口
    port: 6379
    # 连接超时时间（毫秒）
    timeout: 10000

#mybatis数据库映射文件配置
mybatis:
  mapper-locations: classpath:mapping/**/*.xml
  type-aliases-package: com.test.demo.*.model

  #在控制台打印sql
  #configuration:
  #  log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

push:
  appkey: b6501a07d9ea15aed6169107
  secret: 326240cbd1afb2cf7e696853

# Mylistener==第三种加载监听器到spring容器里面
context:
  listener:
    classes: com.test.demo.event.test4.Mylistener


